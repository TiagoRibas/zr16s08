			mov r0,0xC7 ;var hsd76210
			mov io (0x9),r0 ;var r_io_hsd
			mov r0,0x80 ;var rodando
			mov io (0xA),r0 ;var r_io_sd
			mov r0,0xD0 ;var dc_lsb
			mov io (0x1C),r0 ;var r_c0
			mov r0,0x7 ;var dc_msb
			mov io (0x1D),r0 ;var r_c1
			mvs r5,0x0
			mvs r15,0x1 ;var hint
			mov r0,0x3F ;var soc_ch3_int
			mov io (0x4),r0 ;var r_adc_ctrl_sta_lsb
adc_check:	mov r5,r5
			jz 0xC ;label adc_check
			mvs r6,0x0
			mvs r10,0x0
bit_chk2:	inc r6
			mov r0,0x3
			cmp r0,r6
			jnz 0x18 ;label brush_lsb
bit_chk10:	mov r0,0xB
			cmp r0,r6
			jz 0x28 ;label time_out
			jnz 0x1F ;label brush_msb
brush_lsb:	jc 0x14 ;label bit_chk10
			mov r0,r3
			and r0,0x1 ;var masc_bit_zero
			shl r3,r3
			mov r0,r0
			jz 0x38 ;label pulso_zero
			jmp 0x3F ;label pulso_um
brush_msb:	mov r0,r4
			and r0,0x1 ;var masc_bit_zero
			shl r4,r4
			mov r0,r0
			jz 0x38 ;label pulso_zero
			jnz 0x3F ;label pulso_um
end_brush:	mvs r10,0x1
			mvs r5,0x0
			jmp 0xC ;label adc_check
time_out:	mov r0,0x80
			mov io (0xA),r0 ;var r_io_sd
			mvs r5,0x0
			mvs r7,0x0
			mov r0,0x64
			mov r9,r0
wait:	mov r5,r5
			jz 0x35 ;label espera3
			inc r7
			cmp r9,r7
			jz 0x25 ;label end_brush
			mvs r5,0x0
			jmp 0x2E ;label wait
espera3:	mov r5,r5
			jz 0x35 ;label espera3
			jmp 0x2E ;label wait
pulso_zero:	mvs r5,0x0
			mvs r7,0x0
			mov r0,0x19
			mov r8,r0
			mov r0,0x19
			mov r9,r0
			jmp 0x51 ;label set_low
pulso_um:	mvs r5,0x0
			mvs r7,0x0
			mov r0,0x32
			mov r8,r0
			mov r0,0x19
			mov r9,r0
			jmp 0x51 ;label set_low
set_high:	mov r0,0x81
			mov io (0xA),r0 ;var r_io_sd
			mvs r7,0x0
			jmp 0x4A ;label loop_high
loop_high:	mov r5,r5
			jz 0x5C ;label espera1
			inc r7
			cmp r8,r7
			jz 0x10 ;label bit_chk2
			mvs r5,0x0
			jmp 0x5C ;label espera1
set_low:	mov r0,0x80
			mov io (0xA),r0 ;var r_io_sd
			mvs r7,0x0
			jmp 0x55 ;label loop_low
loop_low:	mov r5,r5
			jz 0x5F ;label espera2
			inc r7
			cmp r9,r7
			jz 0x46 ;label set_high
			mvs r5,0x0
			jmp 0x5F ;label espera2
espera1:	mov r5,r5
			jz 0x5C ;label espera1
			jmp 0x4A ;label loop_high
espera2:	mov r5,r5
			jz 0x5F ;label espera2
			jmp 0x55 ;label loop_low
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			mov (0x0),r0 ;var mem_r0
			mov io r0,(0x0) ;var r_int_st
			cmp r0,0x4 ;var int_adc
			jz 0x3CA ;label intadc
			mov io r0,(0x0) ;var r_int_st
			cmp r0,0x8 ;var int_timer
			jz 0x3D6 ;label inttimer
			mov r0,0xC0 ;var erroint
			mov io (0xA),r0 ;var r_io_sd
			jmp 0x3C9 ;var $
intadc:	mvs r5,0x1
			mov r0,0x4 ;var r_adc_ctrl_sta_lsb
			mvs r3,0x3 ;var masc_bit_inf
			and r3,r0
			mov io r0,(0x5) ;var r_adc_data_msb
			mov r4,r0
			mov r0,0xF ;var adc_stop
			mov io (0x4),r0 ;var r_adc_ctrl_sta_lsb
			mov r0,0x87 ;var h_tir
			mov io (0x1E),r0 ;var r_cont_st
			mov r0,(0x0) ;var mem_r0
			rets
inttimer:	mov r10,r10
			jnz 0x3DD ;label restart
			mvs r5,0x1
			mov r0,0x87 ;var h_tir
			mov io (0x1E),r0 ;var r_cont_st
			mov r0,(0x0) ;var mem_r0
			rets
restart:	mov r0,0x80
			mov io (0x1E),r0 ;var r_cont_st
			mov r0,0x3F ;var soc_ch3_int
			mov io (0x4),r0 ;var r_adc_ctrl_sta_lsb
			mvs r10,0x0
			mvs r5,0x0
			mov r0,(0x0) ;var mem_r0
			rets
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
