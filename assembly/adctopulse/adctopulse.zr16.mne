			mvs r2,0x0 ;var esperando
			mvs r1,0x1
			mov r0,0x7 ;var hsd123
			mov io (0x9),r0 ;var r_io_hsd
			mov r0,0x80 ;var rodando
			mov io (0xA),r0 ;var r_io_sd
			mov r0,0xE8 ;var dc_lsb
			mov io (0x1D),r0 ;var r_c1
			mov r0,0x3 ;var dc_msb
			mov io (0x1C),r0 ;var r_c0
			mov r0,0x3F ;var soc_ch3_int
			mov io (0x4),r0 ;var r_adc_ctrl_st_lsb
			mov r0,0x3 ;var hint_ed
			mov r15,r0
adc_check:	mov r2,r2
			jz 0xE ;label adc_check
check_pntr:	mov r0,0xFE
			cmp r0,r1
			jz 0x20 ;label espera
			mov (r1),r4
			inc r1
			mov (r1),r3
			inc r1
			mvs r2,0x0 ;var esperando
loop_data:	mov r2,r2
			jz 0x18 ;label loop_data
			inc r5
			mov r0,0x14 ;var ciclos_data
			cmp r0,r5
			mvs r2,0x0 ;var esperando
			jz 0xE ;label adc_check
			jmp 0x18 ;label loop_data
espera:	jmp 0x20 ;var $
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			mov (0x0),r0 ;var mem_r0
			mov io r0,(0x0) ;var r_ctrl_int_st
			cmp r0,0x4 ;var int_adc
			jz 0x3C9 ;label intadc
			cmp r0,0x8 ;var int_timer
			jz 0x3D5 ;label inttimer
			mov r0,0x40 ;var erro
			mov io (0xA),r0 ;var r_io_sd
			jmp 0x3C8 ;var $
intadc:	mvs r2,0x1 ;var interrompeu
			mvs r4,0x3 ;var masc_bit_01
			mov r0,0x4 ;var r_adc_ctrl_st_lsb
			and r4,r0
			mov r0,0x5 ;var r_adc_data_msb
			mov r3,r0
			mov r0,0xF ;var adc_stop
			mov io (0x4),r0 ;var r_adc_ctrl_st_lsb
			mov r0,0x87 ;var hab_timer
			mov io (0x1E),r0 ;var r_cont_st
			mov r0,(0x0) ;var mem_r0
			rets
inttimer:	mvs r2,0x1 ;var interrompeu
			mov r0,0x87 ;var hab_timer
			mov io (0x1E),r0 ;var r_cont_st
			mov r0,(0x0) ;var mem_r0
			rets
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
