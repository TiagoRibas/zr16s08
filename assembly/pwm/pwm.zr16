;----------------------------------------------
;Gera pwm de duty_cycle e frequencia constante
;----------zr16----------------------------------- 
			dv	hint	=	0b00000001				;Valor de habilitacao do bit hint
			dv	rot_int	=	0x3C0					;Endereco da rotina de interrupcao
;----------interrupt-----------------------------------
			dr	status_int	=	r1					;Registrador que define status das interrupcoes
			dv	aguardando	=	0					;Aguardando interrupcao
			dv	interrompeu	=	1    				;Interrupcao ocorreu
			dv	reg_ctrl_int	=	0x00			;Registrador de controle de interrupcao
			dv	int_timer	=	0b00001000 			;Identificador de interrupcao no timer
;----------timer----------------------------------- 
			dv	reg_c0			= 0x1C				;Reg. carga zero
			dv	reg_c1			= 0x1D				;Reg  carga um
			dv	reg_cont_st		= 0x1E				;Reg. status do down counter
			dv	hab_timer		= 0b10000111		;Habilitacao de contador
			dv	tempo			= 5000				;Ciclos a serem efetuados numa contagem
			dv	dc_msb			= sr8(tempo)		;msb
			dv	dc_lsb			= 0x00FF & tempo	;lsb
			dr	contador		= r2				;Contador a ser incrementado
			;dv	periodo			= 20
			;dv	duty_cycle	=   2 
			dv	tempo_h		= 10			;Tempo de high 
			dv	tempo_l		= 10				;Tempo de low
;----------IO----------------------------------- 			 
			dv	reg_hab_sd	=	0x09				;Registrdor de habilitacao de saidas digitais
			dv	reg_sd	=	0x0A					;Registrador de valorndas saidas digitais
			dv	hab_sd01	=	0b00000011			;Habilitacao de saidas digitais 0 e 1
			dv	on_sd1	=	0b00000011				;Liga sd1
			dv	off_sd1	=	0b00000001				;Desliga sd1
;----------setup-----------------------------------      
			mvs	status_int,aguardando 				;Aguardando por interrupcao
			mov r0,0
			mov	contador,r0
			mov	r0,hab_sd01							;
			mov	io	(reg_hab_sd),r0					;Habilita saidas digitais 1 e 0
			mov	r0,off_sd1							;
			mov	io	(reg_sd),r0						;Liga sd0
			mov	r0,dc_lsb							;
			mov	io	(reg_c0),r0						;Carrega carga 0(lsb)
			mov	r0,dc_msb							;
			mov	io	(reg_c1),r0						;Carrega carga 1(msb)
			mov	r0,hab_timer						;
			mov	io	(reg_cont_st),r0  				;Habilita interrupcao de timer
			mvs	r15,hint							;Habilita interrupcoes no zr16
;----------main----------------------------------- 
seton:		mov	r0,on_sd1
			mov	io	(reg_sd),r0
			mov	r0,0
			mov	contador,r0
			mov	status_int,r0
waiton:		mov status_int,status_int
			jz waiton
			mov	r0,aguardando
			mov	status_int,r0
			inc contador
			mov	r0,tempo_h
			cmp r0,contador
			jnz waiton
setoff:		mov	r0,off_sd1
			mov	io	(reg_sd),r0
			mov	r0,0
			mov	contador,r0
			mov	status_int,r0
waitoff:	mov status_int,status_int
			jz waitoff
			mov	r0,aguardando
			mov	status_int,r0
			inc contador
			mov	r0,tempo_l
			cmp r0,contador
			jnz waitoff
			jmp seton
;----------interrupt-----------------------------------  
			org	rot_int
			mov	io	r0,(reg_ctrl_int)
			cmp	r0,int_timer
			jz	timer_ok
			jmp $
timer_ok:	mvs	status_int,interrompeu
			mov	r0, hab_timer
			mov	io	(reg_cont_st),r0 
			rets 